%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2388 2388
%%HiResBoundingBox: 0 0 2387.04 2387.04
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2387.04 2387.04 re
W
q
[0.24 0 0 -0.24 0 2387.04] cm
q
0 0 9945.833 9945.833 re
W*
q
[187.48878 0 0 187.48878 285.69717 285.69717] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
50 25 m
50 25.409143 49.98996 25.818041 49.969883 26.226692 c
49.949806 26.635344 49.91972 27.043257 49.879616 27.45043 c
49.839512 27.857601 49.789444 28.263544 49.729412 28.668259 c
49.66938 29.072973 49.599453 29.475973 49.51963 29.877254 c
49.439808 30.278536 49.350193 30.677618 49.250778 31.074501 c
49.151367 31.471384 49.042278 31.865587 48.923508 32.257114 c
48.804737 32.64864 48.676434 33.037014 48.538597 33.422237 c
48.400761 33.807465 48.253555 34.189079 48.096981 34.567078 c
47.940407 34.94508 47.774658 35.319012 47.599728 35.688873 c
47.424797 36.058735 47.240898 36.424084 47.048031 36.784912 c
46.855164 37.145744 46.653557 37.501629 46.443214 37.852562 c
46.232868 38.203495 46.014042 38.549057 45.786736 38.889248 c
45.559429 39.229439 45.32391 39.56385 45.080181 39.892479 c
44.836456 40.221107 44.584816 40.543556 44.32526 40.859829 c
44.065701 41.176102 43.798538 41.485813 43.523777 41.788967 c
43.249008 42.092125 42.966972 42.388355 42.677666 42.677666 c
42.388355 42.966972 42.092125 43.249008 41.788967 43.523773 c
41.485813 43.798538 41.176102 44.065701 40.859829 44.32526 c
40.543556 44.584816 40.221107 44.836456 39.892479 45.080181 c
39.56385 45.32391 39.229439 45.559429 38.889248 45.786736 c
38.549057 46.014042 38.203495 46.232868 37.852562 46.443214 c
37.501629 46.653557 37.145744 46.855164 36.784912 47.048031 c
36.424084 47.240898 36.058735 47.424797 35.688873 47.599728 c
35.319012 47.774658 34.94508 47.940407 34.567078 48.096981 c
34.189079 48.253555 33.807465 48.400761 33.422237 48.538597 c
33.037014 48.676434 32.64864 48.804737 32.257114 48.923504 c
31.865587 49.042271 31.471384 49.15136 31.074501 49.250774 c
30.677618 49.350189 30.278536 49.439808 29.877254 49.519627 c
29.475973 49.599445 29.072973 49.669373 28.668259 49.729404 c
28.263544 49.78944 27.857599 49.839512 27.450428 49.879616 c
27.043257 49.91972 26.635344 49.949806 26.226692 49.969883 c
25.818041 49.98996 25.409143 50 25 50 c
24.590857 50 24.181959 49.98996 23.773308 49.969883 c
23.364656 49.949806 22.956745 49.91972 22.549572 49.879616 c
22.142397 49.839512 21.736452 49.789444 21.331736 49.729412 c
20.927021 49.66938 20.524023 49.599453 20.122742 49.51963 c
19.72146 49.439808 19.322378 49.350193 18.925495 49.250778 c
18.528612 49.151367 18.134409 49.042278 17.742882 48.923508 c
17.351355 48.804737 16.962978 48.676434 16.577751 48.538597 c
16.192526 48.400761 15.810913 48.253555 15.432914 48.096981 c
15.054915 47.940407 14.680984 47.774658 14.311122 47.599728 c
13.94126 47.424797 13.575913 47.240898 13.215082 47.048031 c
12.854249 46.855164 12.498365 46.653557 12.147431 46.443214 c
11.796497 46.232868 11.450934 46.014042 11.110744 45.786736 c
10.770553 45.559429 10.436144 45.32391 10.107516 45.080181 c
9.77889 44.836456 9.45644 44.584816 9.140168 44.32526 c
8.823896 44.065701 8.514181 43.798538 8.211026 43.523777 c
7.90787 43.249008 7.611638 42.966972 7.32233 42.677666 c
7.033022 42.388355 6.750986 42.092125 6.476222 41.788967 c
6.201458 41.485813 5.934297 41.176102 5.674739 40.859829 c
5.415181 40.543556 5.163538 40.221107 4.919812 39.892479 c
4.676084 39.56385 4.440567 39.229439 4.213259 38.889248 c
3.985951 38.549057 3.767126 38.203495 3.556784 37.852562 c
3.346442 37.501629 3.144837 37.145744 2.951968 36.784912 c
2.759099 36.424084 2.575199 36.058735 2.400267 35.688873 c
2.225336 35.319012 2.059584 34.94508 1.903011 34.567078 c
1.746439 34.189079 1.599235 33.807465 1.461398 33.422237 c
1.323562 33.037014 1.19526 32.64864 1.076492 32.257114 c
0.957723 31.865587 0.848632 31.471384 0.749219 31.074501 c
0.649805 30.677618 0.560188 30.278536 0.480368 29.877254 c
0.400548 29.475973 0.330621 29.072973 0.270587 28.668259 c
0.210553 28.263544 0.160485 27.857599 0.120382 27.450428 c
0.080279 27.043257 0.050189 26.635344 0.030114 26.226692 c
0.010038 25.818041 0 25.409143 0 25 c
0 24.590857 0.010038 24.181959 0.030114 23.773308 c
0.050189 23.364656 0.080279 22.956745 0.120382 22.549572 c
0.160485 22.142397 0.210553 21.736452 0.270587 21.331736 c
0.330621 20.927021 0.400548 20.524023 0.480368 20.122742 c
0.560188 19.72146 0.649805 19.322378 0.749219 18.925495 c
0.848632 18.528612 0.957723 18.134409 1.076491 17.742882 c
1.19526 17.351355 1.323562 16.962978 1.461398 16.577751 c
1.599234 16.192526 1.746439 15.810913 1.903011 15.432914 c
2.059584 15.054915 2.225336 14.680984 2.400267 14.311122 c
2.575199 13.94126 2.759099 13.575913 2.951968 13.215082 c
3.144837 12.854249 3.346442 12.498365 3.556784 12.147431 c
3.767126 11.796497 3.985951 11.450934 4.213259 11.110744 c
4.440567 10.770553 4.676084 10.436144 4.919811 10.107516 c
5.163538 9.77889 5.415181 9.45644 5.674739 9.140168 c
5.934297 8.823896 6.201458 8.514181 6.476222 8.211026 c
6.750986 7.90787 7.033022 7.611638 7.32233 7.32233 c
7.611638 7.033022 7.90787 6.750986 8.211026 6.476222 c
8.514181 6.201458 8.823895 5.934297 9.140167 5.674739 c
9.45644 5.415181 9.77889 5.163538 10.107516 4.919812 c
10.436143 4.676084 10.770552 4.440567 11.110743 4.213259 c
11.450934 3.985951 11.796495 3.767126 12.14743 3.556784 c
12.498363 3.346442 12.854248 3.144837 13.215081 2.951968 c
13.575913 2.759099 13.941259 2.575199 14.31112 2.400267 c
14.680983 2.225336 15.054913 2.059584 15.432912 1.903011 c
15.810911 1.746439 16.192524 1.599235 16.577749 1.461398 c
16.962978 1.323562 17.351355 1.19526 17.74288 1.076492 c
18.134407 0.957723 18.528612 0.848632 18.925495 0.749219 c
19.322376 0.649805 19.721458 0.560188 20.12274 0.480368 c
20.524021 0.400548 20.927021 0.330621 21.331736 0.270587 c
21.736452 0.210553 22.142397 0.160485 22.549572 0.120382 c
22.956745 0.080279 23.364656 0.050189 23.773308 0.030114 c
24.181959 0.010038 24.590857 0 25 0 c
25.409143 0 25.818041 0.010038 26.226692 0.030114 c
26.635344 0.050189 27.043257 0.080279 27.45043 0.120382 c
27.857601 0.160485 28.263544 0.210553 28.668259 0.270587 c
29.072973 0.330621 29.475973 0.400548 29.877254 0.480368 c
30.278536 0.560188 30.677618 0.649805 31.074501 0.749219 c
31.471384 0.848632 31.865587 0.957723 32.257114 1.076491 c
32.64864 1.19526 33.037014 1.323562 33.422237 1.461398 c
33.807465 1.599234 34.189079 1.746439 34.567078 1.903011 c
34.94508 2.059584 35.319012 2.225336 35.688873 2.400267 c
36.058735 2.575199 36.424084 2.759099 36.784912 2.951968 c
37.145744 3.144837 37.501629 3.346442 37.852562 3.556784 c
38.203495 3.767126 38.549057 3.985951 38.889248 4.213259 c
39.229439 4.440567 39.56385 4.676084 39.892479 4.919811 c
40.221107 5.163538 40.543556 5.415181 40.859829 5.674739 c
41.176102 5.934297 41.485813 6.201458 41.788967 6.476222 c
42.092125 6.750986 42.388355 7.033022 42.677666 7.32233 c
42.966972 7.611638 43.249008 7.90787 43.523773 8.211026 c
43.798538 8.514181 44.065701 8.823895 44.32526 9.140167 c
44.584816 9.45644 44.836456 9.77889 45.080181 10.107516 c
45.32391 10.436143 45.559429 10.770552 45.786736 11.110743 c
46.014042 11.450934 46.232868 11.796495 46.443214 12.14743 c
46.653557 12.498363 46.855164 12.854248 47.048031 13.215081 c
47.240898 13.575913 47.424797 13.941259 47.599728 14.31112 c
47.774658 14.680983 47.940407 15.054913 48.096981 15.432912 c
48.253555 15.810911 48.400761 16.192524 48.538597 16.577749 c
48.676434 16.962978 48.804737 17.351355 48.923504 17.74288 c
49.042271 18.134407 49.15136 18.528612 49.250774 18.925495 c
49.350189 19.322376 49.439808 19.721458 49.519627 20.12274 c
49.599445 20.524021 49.669373 20.927021 49.729404 21.331736 c
49.78944 21.736452 49.839512 22.142397 49.879616 22.549572 c
49.91972 22.956745 49.949806 23.364656 49.969883 23.773308 c
49.98996 24.181959 50 24.590857 50 25 c
h
f
Q
q
[39.216492 0 0 39.216492 2977.928 1806.6014] cm
62 95 m
59.5 90 54.400002 86.5 48.400002 86.5 c
42.400002 86.5 37.300003 90 34.800003 95 c
62 95 l
h
f
47.400002 85 m
41 85 34.5 83.400002 28.500002 80.199997 c
29.900002 77.599998 l
47.700001 87.299995 70.100006 80.699997 79.800003 62.899998 c
84.5 54.299995 85.5 44.299995 82.800003 34.899998 c
80 25.499998 73.700005 17.699997 65.100006 12.999998 c
66.500008 10.399998 l
75.800011 15.499998 82.600006 23.899998 85.600006 34.099998 c
88.600006 44.299999 87.500008 55 82.400009 64.399994 c
75.199997 77.5 61.5 85 47.400002 85 c
h
f
72.099998 7.1 m
72.099998 7.194979 72.095345 7.289729 72.086037 7.38425 c
72.076729 7.478771 72.062805 7.572608 72.044273 7.665761 c
72.025749 7.758915 72.002701 7.850936 71.975128 7.941825 c
71.947556 8.032715 71.915596 8.122033 71.879242 8.209782 c
71.842903 8.29753 71.802345 8.383287 71.757568 8.46705 c
71.712799 8.550814 71.664032 8.632181 71.611259 8.711152 c
71.558487 8.790125 71.501984 8.866321 71.441734 8.93974 c
71.38147 9.01316 71.317764 9.083449 71.250603 9.150609 c
71.183449 9.217769 71.113159 9.281476 71.039742 9.34173 c
70.966316 9.401984 70.890114 9.458494 70.811142 9.511262 c
70.73217 9.564029 70.65081 9.612799 70.567047 9.657572 c
70.483284 9.702344 70.39753 9.742904 70.309776 9.779249 c
70.222031 9.815597 70.132713 9.847555 70.041824 9.875126 c
69.950935 9.902698 69.858917 9.925747 69.765755 9.944276 c
69.672607 9.962806 69.578773 9.976726 69.484253 9.986035 c
69.389725 9.995345 69.294975 10 69.199997 10 c
69.105019 10 69.010277 9.995345 68.915756 9.986035 c
68.821236 9.976726 68.727394 9.962806 68.634232 9.944276 c
68.541084 9.925747 68.449059 9.902698 68.35817 9.875127 c
68.267281 9.847555 68.177956 9.815597 68.090202 9.779249 c
68.002457 9.742904 67.916702 9.702344 67.832939 9.657572 c
67.749176 9.612799 67.667801 9.564029 67.588829 9.511261 c
67.509857 9.458494 67.433662 9.401984 67.360245 9.34173 c
67.286827 9.281476 67.216537 9.217769 67.149376 9.150609 c
67.082214 9.083449 67.018509 9.01316 66.95826 8.93974 c
66.898003 8.866321 66.841492 8.790125 66.788727 8.711152 c
66.735962 8.632181 66.687195 8.550814 66.642418 8.46705 c
66.597641 8.383286 66.557083 8.297529 66.520737 8.209781 c
66.484398 8.122032 66.452438 8.032714 66.424866 7.941825 c
66.397293 7.850936 66.374245 7.758915 66.355713 7.665761 c
66.337189 7.572608 66.323273 7.478771 66.313957 7.38425 c
66.304649 7.289729 66.299995 7.194979 66.299995 7.1 c
66.299995 7.005022 66.304649 6.910272 66.313957 6.81575 c
66.323273 6.721229 66.337189 6.627391 66.355721 6.534237 c
66.374245 6.441084 66.397293 6.349063 66.424866 6.258174 c
66.452438 6.167285 66.484398 6.077967 66.520737 5.990218 c
66.557083 5.902469 66.597641 5.816713 66.642418 5.732949 c
66.687195 5.649185 66.735962 5.567818 66.788727 5.488846 c
66.841499 5.409874 66.89801 5.333679 66.958267 5.26026 c
67.018517 5.186841 67.082222 5.11655 67.149384 5.04939 c
67.216545 4.98223 67.286835 4.918523 67.360252 4.85827 c
67.43367 4.798016 67.509857 4.741506 67.588829 4.688738 c
67.667809 4.635971 67.749184 4.587201 67.832947 4.542429 c
67.91671 4.497656 68.002464 4.457096 68.09021 4.420749 c
68.177956 4.384402 68.267281 4.352444 68.35817 4.324873 c
68.449059 4.297302 68.541084 4.274252 68.634232 4.255723 c
68.727394 4.237193 68.821236 4.223274 68.915756 4.213964 c
69.010277 4.204655 69.105019 4.2 69.199997 4.2 c
69.294975 4.2 69.389725 4.204655 69.484245 4.213964 c
69.578766 4.223274 69.672607 4.237193 69.765755 4.255723 c
69.858917 4.274252 69.950935 4.297302 70.041824 4.324873 c
70.132713 4.352444 70.222023 4.384402 70.309769 4.420749 c
70.397522 4.457096 70.483284 4.497656 70.567047 4.542429 c
70.65081 4.587201 70.73217 4.635971 70.811142 4.688737 c
70.890114 4.741505 70.966316 4.798016 71.039734 4.858269 c
71.113159 4.918523 71.183449 4.98223 71.250603 5.04939 c
71.317764 5.11655 71.38147 5.186841 71.441734 5.26026 c
71.501984 5.333679 71.558487 5.409874 71.611259 5.488846 c
71.664032 5.567817 71.712799 5.649185 71.757568 5.732948 c
71.802345 5.816712 71.842903 5.902468 71.879242 5.990217 c
71.915596 6.077966 71.947556 6.167285 71.975128 6.258174 c
72.002701 6.349063 72.025749 6.441084 72.044273 6.534237 c
72.062805 6.627391 72.076729 6.721229 72.086037 6.815751 c
72.095345 6.910272 72.099998 7.005022 72.099998 7.1 c
h
f
29.100002 83.800003 m
29.100002 83.894981 29.095346 83.989731 29.086037 84.084251 c
29.076727 84.178772 29.062807 84.272606 29.044275 84.365761 c
29.025747 84.458916 29.002699 84.550941 28.975128 84.64183 c
28.947557 84.732719 28.915598 84.822037 28.87925 84.909782 c
28.842903 84.997536 28.802345 85.08329 28.757574 85.167046 c
28.712799 85.250816 28.664028 85.332184 28.611259 85.411148 c
28.558493 85.490128 28.501984 85.566322 28.441732 85.63974 c
28.381477 85.713158 28.31777 85.783447 28.250608 85.850609 c
28.183449 85.91777 28.113159 85.981476 28.03974 86.041725 c
27.96632 86.101982 27.890125 86.158493 27.811152 86.211258 c
27.732182 86.26403 27.650814 86.312805 27.567053 86.357574 c
27.483288 86.402344 27.397532 86.442902 27.30978 86.479248 c
27.222033 86.515602 27.132713 86.547562 27.041826 86.575134 c
26.950937 86.602699 26.858915 86.625748 26.76576 86.644272 c
26.672607 86.662804 26.578772 86.676727 26.484249 86.686043 c
26.38973 86.695351 26.294981 86.700005 26.200001 86.700005 c
26.105024 86.700005 26.010275 86.695351 25.915752 86.686043 c
25.82123 86.676727 25.727392 86.662804 25.634237 86.644272 c
25.541084 86.625748 25.449062 86.602699 25.358175 86.575134 c
25.267284 86.547562 25.177965 86.515602 25.090216 86.479248 c
25.002468 86.442902 24.916714 86.402344 24.832949 86.357567 c
24.749186 86.312805 24.667818 86.26403 24.588844 86.211258 c
24.509874 86.158493 24.43368 86.101982 24.36026 86.041725 c
24.28684 85.981476 24.216551 85.917763 24.149389 85.850601 c
24.08223 85.78344 24.018522 85.71315 23.958267 85.639725 c
23.898014 85.566315 23.841503 85.49012 23.788734 85.411148 c
23.735968 85.332184 23.687199 85.250816 23.642427 85.167053 c
23.597656 85.08329 23.557096 84.997536 23.520748 84.909782 c
23.484402 84.822037 23.452444 84.732712 23.424873 84.641823 c
23.397303 84.550934 23.374252 84.458916 23.355722 84.365768 c
23.337194 84.272614 23.323277 84.178772 23.313967 84.084251 c
23.304657 83.989731 23.300001 83.894981 23.300001 83.800003 c
23.300001 83.705025 23.304655 83.610275 23.313965 83.515755 c
23.323275 83.421234 23.337194 83.327393 23.355722 83.234238 c
23.374252 83.141083 23.397303 83.049065 23.424873 82.958176 c
23.452444 82.867287 23.484402 82.777962 23.520748 82.690208 c
23.557096 82.602463 23.597656 82.516708 23.642429 82.432945 c
23.687201 82.349182 23.735968 82.267815 23.788734 82.188835 c
23.841501 82.109871 23.898012 82.033676 23.958265 81.960258 c
24.01852 81.886841 24.082228 81.816544 24.149387 81.749382 c
24.216549 81.68222 24.286839 81.618515 24.360258 81.558266 c
24.433678 81.498009 24.509871 81.441498 24.58884 81.388725 c
24.667814 81.335968 24.749184 81.287201 24.832945 81.242424 c
24.91671 81.197655 25.002466 81.157097 25.090214 81.120743 c
25.177965 81.084404 25.267284 81.052444 25.358173 81.024879 c
25.449062 80.997314 25.541082 80.974258 25.634235 80.955727 c
25.727392 80.937202 25.82123 80.923286 25.915752 80.913971 c
26.010275 80.904671 26.105024 80.900009 26.200001 80.900002 c
26.294981 80.900009 26.38973 80.904671 26.484251 80.913971 c
26.578772 80.923286 26.672607 80.937202 26.76576 80.955727 c
26.858915 80.974258 26.950937 80.997314 27.041824 81.024879 c
27.132713 81.052444 27.222033 81.084404 27.30978 81.12075 c
27.397532 81.157097 27.483288 81.197655 27.567053 81.242432 c
27.650816 81.287201 27.732183 81.335968 27.811153 81.388733 c
27.890127 81.441505 27.966324 81.498016 28.039743 81.558266 c
28.113163 81.618515 28.183453 81.68222 28.250612 81.749382 c
28.317772 81.816544 28.381479 81.886841 28.441732 81.960258 c
28.501984 82.033676 28.558493 82.109871 28.611259 82.188835 c
28.664028 82.267815 28.712799 82.349182 28.757574 82.432945 c
28.802345 82.516708 28.842903 82.60247 28.87925 82.690216 c
28.915598 82.777969 28.947557 82.867287 28.975128 82.958176 c
29.002699 83.049065 29.025747 83.14109 29.044277 83.234238 c
29.062807 83.327393 29.076727 83.421234 29.086037 83.515755 c
29.095346 83.610275 29.100002 83.705025 29.100002 83.800003 c
h
f
74.699997 24.1 m
74.699997 24 l
70.699997 19.200001 65.5 15.6 59.499996 13.6 c
59.499996 13.700001 l
55.999996 12.500001 52.299995 11.900001 48.499996 11.900001 c
45.299995 11.900001 42.299995 12.3 39.399994 13.1 c
39.499992 13.1 l
34.299992 14.5 29.599993 17.200001 25.699993 20.700001 c
25.699993 20.700001 25.599993 20.800001 25.599993 20.800001 c
25.199993 21.1 24.899992 21.500002 24.499992 21.800001 c
24.499992 21.800001 24.399992 21.900002 24.399992 21.900002 c
23.999992 22.300001 23.699991 22.700001 23.299992 23.000002 c
23.199991 23.100002 23.199991 23.100002 23.099991 23.200003 c
22.799992 23.500002 22.599991 23.800003 22.299992 24.100002 c
22.099991 24.300003 21.999992 24.500002 21.799992 24.700003 c
21.699991 24.900003 21.599991 25.000002 21.399992 25.200003 c
21.199991 25.500002 20.999992 25.700003 20.799992 26.000002 c
20.699991 26.100002 20.699991 26.200003 20.599991 26.300001 c
16.699991 31.900002 14.399991 38.600002 14.399991 46 c
14.399991 64.900002 29.699991 80.099998 48.499989 80.099998 c
67.299988 80.099998 82.599991 64.799995 82.599991 46 c
82.599998 37.599998 79.599998 30 74.699997 24.1 c
h
81.599998 45.900002 m
81.599998 49.700001 81 53.300003 79.799995 56.700001 c
79.299995 55.299999 l
77.899994 57.299999 l
75.099991 56.200001 l
74.199989 50.700001 l
75.399986 48.900002 l
74.999985 46.900002 l
77.099983 40.900002 l
78.199982 37.5 l
77.099983 35.200001 l
76.900002 34 l
79 34 l
77.400002 30.700001 l
75.400002 29.1 l
75 26.1 l
79.099998 31.6 81.599998 38.5 81.599998 45.900002 c
h
48.5 12.8 m
52.599998 12.8 56.5 13.5 60.099998 14.9 c
61.099998 17.1 l
59.699997 18.4 l
61.099998 22.9 l
60.599998 24.299999 l
62.699997 25.699999 l
60.599998 26.199999 l
57.199997 22.999998 l
49.699997 25.999998 l
46.499996 27.399998 l
44.899998 30.199997 l
44.299999 27 l
38.799999 25.9 l
34.899998 28 l
34.499996 30.700001 l
38.399998 32.100002 l
39.299999 35.500004 l
37.899998 37.500004 l
39.499996 39.000004 l
42.999996 39.000004 l
47.099995 42.700005 l
50.699993 46.900005 l
54.399994 48.900005 l
54.599995 53.200005 l
58.199993 56.900005 l
60.299992 61.300007 l
57 63 l
51.799999 67.400002 l
48.799999 66.5 l
46 69.199997 l
40 70.399994 l
37 69.499992 l
34.700001 71.599991 l
33.799999 73.399994 l
34.799999 74.999992 l
32 72.599998 l
32 70 l
37.299999 61.099998 l
38.099998 57.5 l
35.900002 54 l
35.5 48.799999 l
39.200001 41.700001 l
37.599998 40 l
36 37.5 l
35.799999 35.200001 l
34.399998 32.900002 l
32.799999 32.700001 l
30.699999 27.5 l
30.499998 23.200001 l
32.799999 17.700001 l
37.399998 14.700001 l
40.900002 13.5 44.599998 12.8 48.5 12.8 c
h
f
Q
q
[22.150505 0 0 22.150505 2053.0237 5875.5806] cm
15.68 11.44 m
18.720001 11.44 21.120001 12.26668 22.880001 13.92 c
24.640001 15.57332 25.52 17.799999 25.52 20.6 c
25.52 23.426701 24.640001 25.66 22.880001 27.299999 c
21.120001 28.939999 18.7332 29.759998 15.720001 29.759998 c
9.040001 29.759998 l
9.040001 40 l
2.760001 40 l
2.760001 11.440001 l
15.68 11.440001 l
15.68 11.44 l
h
14.04 24.879999 m
15.8533 24.879999 17.206699 24.546679 18.1 23.879999 c
18.993301 23.21332 19.440001 22.119999 19.440001 20.599998 c
19.440001 19.133299 19.006681 18.053299 18.140001 17.359999 c
17.273321 16.666698 15.920001 16.32 14.080002 16.32 c
9.040002 16.32 l
9.040002 24.880001 l
14.040002 24.880001 l
14.04 24.879999 l
h
55.330002 11.44 m
55.330002 16.719999 l
40.25 16.719999 l
40.25 22.84 l
54.09 22.84 l
54.09 27.720001 l
40.25 27.720001 l
40.25 34.720001 l
55.650002 34.720001 l
55.650002 40 l
33.970001 40 l
33.970001 11.440001 l
55.330002 11.440001 l
55.330002 11.44 l
h
78.660004 11.44 m
89.340004 40 l
82.820007 40 l
80.660004 33.639999 l
69.980003 33.639999 l
67.740005 40 l
61.380005 40 l
72.220001 11.440001 l
78.660004 11.440001 l
78.660004 11.44 l
h
75.339996 18.48 m
71.619995 28.959999 l
79.019997 28.959999 l
75.419998 18.48 l
75.339996 18.48 l
h
109.150002 10.76 m
112.483299 10.76 115.283203 11.700001 117.550003 13.58 c
119.816803 15.459999 121.123405 17.9468 121.470001 21.040001 c
115.389999 21.040001 l
115.176682 19.626701 114.470001 18.440001 113.269997 17.480001 c
112.069992 16.520002 110.696693 16.040001 109.149994 16.040001 c
106.696693 16.040001 104.789993 16.92 103.429993 18.68 c
102.069992 20.440001 101.389992 22.826801 101.389992 25.84 c
101.389992 28.7733 102.076675 31.1 103.449989 32.82 c
104.823303 34.540001 106.723289 35.400002 109.149986 35.400002 c
110.963287 35.400002 112.429985 34.84668 113.549988 33.740002 c
114.669991 32.633324 115.363289 31.053303 115.62999 29.000002 c
121.709991 29.000002 l
121.389992 32.626701 120.089989 35.480003 117.80999 37.560001 c
115.529991 39.639999 112.643188 40.68 109.149994 40.68 c
104.963196 40.68 101.576797 39.299999 98.98999 36.540001 c
96.403183 33.780003 95.109993 30.213202 95.109993 25.84 c
95.109993 21.4132 96.389992 17.793201 98.949997 14.980001 c
101.510002 12.1668 104.909996 10.76 109.149994 10.76 c
109.150002 10.76 l
h
151.880005 11.44 m
151.880005 16.719999 l
136.800003 16.719999 l
136.800003 22.84 l
150.639999 22.84 l
150.639999 27.720001 l
136.800003 27.720001 l
136.800003 34.720001 l
152.199997 34.720001 l
152.199997 40 l
130.519989 40 l
130.519989 11.440001 l
151.87999 11.440001 l
151.880005 11.44 l
h
182.89999 11.44 m
182.89999 34.720001 l
196.81999 34.720001 l
196.81999 40 l
176.62 40 l
176.62 11.440001 l
182.89999 11.440001 l
182.89999 11.44 l
h
219.11 11.44 m
229.79001 40 l
223.27 40 l
221.11 33.639999 l
210.42999 33.639999 l
208.18999 40 l
201.82999 40 l
212.66998 11.440001 l
219.10999 11.440001 l
219.11 11.44 l
h
215.78999 18.48 m
212.06999 28.959999 l
219.46999 28.959999 l
215.86998 18.48 l
215.78998 18.48 l
215.78999 18.48 l
h
250.28 11.44 m
256.33319 11.44 259.35999 13.7866 259.35999 18.48 c
259.35999 21.1733 258.06668 23.173199 255.47998 24.48 c
257.23999 24.986679 258.55328 25.8734 259.41998 27.139999 c
260.28668 28.406599 260.71997 29.933399 260.71997 31.719999 c
260.71997 34.279999 259.7933 36.299999 257.93997 37.779999 c
256.08664 39.259998 253.65317 40 250.63997 40 c
236.79997 40 l
236.79997 11.440001 l
250.27997 11.440001 l
250.28 11.44 l
h
249.48 23 m
252.01329 23 253.28 21.866699 253.28 19.6 c
253.28 17.4133 251.8667 16.32 249.03999 16.32 c
243.07999 16.32 l
243.07999 23 l
249.47998 23 l
249.48 23 l
h
249.84 35.119999 m
252.90669 35.119999 254.44 33.866699 254.44 31.359999 c
254.44 28.639999 252.9467 27.279999 249.96001 27.279999 c
243.08 27.279999 l
243.08 35.119999 l
249.84 35.119999 l
h
f
Q
q
[41.10751 0 0 41.10751 2997.1484 7121.2593] cm
7.78 5.38 m
9.4467 5.38 10.8466 5.85 11.98 6.79 c
13.1134 7.73 13.7667 8.9734 13.94 10.520001 c
10.9 10.520001 l
10.79334 9.81334 10.44 9.22 9.84 8.740001 c
9.240001 8.260001 8.5533 8.020001 7.78 8.020001 c
6.5533 8.020001 5.6 8.46 4.92 9.34 c
4.24 10.22 3.9 11.413401 3.9 12.92 c
3.9 14.3867 4.24334 15.55 4.93 16.41 c
5.616661 17.27 6.5667 17.700001 7.78 17.700001 c
8.68666 17.700001 9.42 17.42334 9.980001 16.870001 c
10.540001 16.316662 10.886661 15.526701 11.020001 14.500001 c
14.06 14.500001 l
13.900001 16.313301 13.25 17.740002 12.110001 18.780001 c
10.970001 19.82 9.526601 20.34 7.780001 20.34 c
5.686601 20.34 3.993401 19.65 2.700001 18.27 c
1.406601 16.890001 0.760001 15.106601 0.760001 12.92 c
0.760001 10.7066 1.400001 8.896601 2.680001 7.49 c
3.960001 6.0834 5.660001 5.38 7.780001 5.38 c
7.78 5.38 l
h
19.34 5.72 m
19.34 11.2 l
25.119999 11.2 l
25.119999 5.72 l
28.259998 5.72 l
28.259998 20 l
25.119999 20 l
25.119999 13.84 l
19.34 13.84 l
19.34 20 l
16.200001 20 l
16.200001 5.72 l
19.34 5.72 l
19.34 5.72 l
h
41.700001 5.72 m
41.700001 8.36 l
34.16 8.36 l
34.16 11.42 l
41.080002 11.42 l
41.080002 13.860001 l
34.160004 13.860001 l
34.160004 17.360001 l
41.860004 17.360001 l
41.860004 20 l
31.020004 20 l
31.020004 5.72 l
41.700005 5.72 l
41.700001 5.72 l
h
50.380001 5.38 m
52.0467 5.38 53.446602 5.85 54.580002 6.79 c
55.713402 7.73 56.366703 8.9734 56.540001 10.520001 c
53.5 10.520001 l
53.393341 9.81334 53.040001 9.22 52.439999 8.740001 c
51.839996 8.260001 51.153297 8.020001 50.379997 8.020001 c
49.153297 8.020001 48.199997 8.46 47.519997 9.34 c
46.839996 10.22 46.499996 11.413401 46.499996 12.92 c
46.499996 14.3867 46.843338 15.55 47.529995 16.41 c
48.216652 17.27 49.166695 17.700001 50.379993 17.700001 c
51.286652 17.700001 52.019993 17.42334 52.579994 16.870001 c
53.139996 16.316662 53.486652 15.526701 53.619995 14.500001 c
56.659996 14.500001 l
56.499996 16.313301 55.849995 17.740002 54.709995 18.780001 c
53.569996 19.82 52.126595 20.34 50.379997 20.34 c
48.286598 20.34 46.593399 19.65 45.299995 18.27 c
44.006592 16.890001 43.359997 15.106601 43.359997 12.92 c
43.359997 10.7066 43.999996 8.896601 45.279999 7.49 c
46.560001 6.0834 48.259998 5.38 50.379997 5.38 c
50.380001 5.38 l
h
61.939999 5.72 m
61.939999 11.639999 l
67.519997 5.719999 l
71.439995 5.719999 l
65.859993 11.359999 l
71.979996 20 l
68.039993 20 l
63.739994 13.58 l
61.939995 15.4 l
61.939995 20 l
58.799995 20 l
58.799995 5.72 l
61.939995 5.72 l
61.939999 5.72 l
h
81.940002 5.72 m
81.940002 20 l
78.800003 20 l
78.800003 5.72 l
81.940002 5.72 l
81.940002 5.72 l
h
95.279999 5.72 m
95.279999 8.36 l
91 8.36 l
91 20 l
87.860001 20 l
87.860001 8.36 l
83.580002 8.36 l
83.580002 5.719999 l
95.279999 5.719999 l
95.279999 5.72 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
